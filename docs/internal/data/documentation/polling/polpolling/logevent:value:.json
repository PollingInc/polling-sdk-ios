{
  "abstract" : [
    {
      "text" : "Send and log events",
      "type" : "text"
    }
  ],
  "hierarchy" : {
    "paths" : [
      [
        "doc:\/\/com.polling.Polling\/documentation\/Polling",
        "doc:\/\/com.polling.Polling\/documentation\/Polling\/POLPolling"
      ]
    ]
  },
  "identifier" : {
    "interfaceLanguage" : "occ",
    "url" : "doc:\/\/com.polling.Polling\/documentation\/Polling\/POLPolling\/logEvent:value:"
  },
  "kind" : "symbol",
  "metadata" : {
    "externalID" : "c:objc(cs)POLPolling(im)logEvent:value:",
    "fragments" : [
      {
        "kind" : "text",
        "text" : "- "
      },
      {
        "kind" : "identifier",
        "text" : "logEvent:value:"
      }
    ],
    "modules" : [
      {
        "name" : "Polling"
      }
    ],
    "navigatorTitle" : [
      {
        "kind" : "identifier",
        "text" : "logEvent:value:"
      }
    ],
    "role" : "symbol",
    "roleHeading" : "Instance Method",
    "symbolKind" : "method",
    "title" : "logEvent:value:"
  },
  "primaryContentSections" : [
    {
      "declarations" : [
        {
          "languages" : [
            "occ"
          ],
          "platforms" : [
            "iOS"
          ],
          "tokens" : [
            {
              "kind" : "text",
              "text" : "- ("
            },
            {
              "kind" : "typeIdentifier",
              "preciseIdentifier" : "c:v",
              "text" : "void"
            },
            {
              "kind" : "text",
              "text" : ") "
            },
            {
              "kind" : "identifier",
              "text" : "logEvent:"
            },
            {
              "kind" : "text",
              "text" : "("
            },
            {
              "kind" : "typeIdentifier",
              "preciseIdentifier" : "c:objc(cs)NSString",
              "text" : "NSString"
            },
            {
              "kind" : "text",
              "text" : " *) "
            },
            {
              "kind" : "internalParam",
              "text" : "eventName"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "identifier",
              "text" : "value:"
            },
            {
              "kind" : "text",
              "text" : "("
            },
            {
              "kind" : "typeIdentifier",
              "preciseIdentifier" : "c:objc(cs)NSString",
              "text" : "NSString"
            },
            {
              "kind" : "text",
              "text" : " *) "
            },
            {
              "kind" : "internalParam",
              "text" : "eventValue"
            },
            {
              "kind" : "text",
              "text" : ";"
            }
          ]
        }
      ],
      "kind" : "declarations"
    },
    {
      "kind" : "parameters",
      "parameters" : [
        {
          "content" : [
            {
              "inlineContent" : [
                {
                  "text" : "The name of the event",
                  "type" : "text"
                }
              ],
              "type" : "paragraph"
            }
          ],
          "name" : "eventName"
        },
        {
          "content" : [
            {
              "inlineContent" : [
                {
                  "text" : "The value of the event",
                  "type" : "text"
                }
              ],
              "type" : "paragraph"
            }
          ],
          "name" : "eventValue"
        }
      ]
    },
    {
      "content" : [
        {
          "anchor" : "discussion",
          "level" : 2,
          "text" : "Discussion",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "text" : "Sends and logs a custom event with a value. Events can be use to",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "link data with customers or to trigger a survey.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        }
      ],
      "kind" : "content"
    }
  ],
  "schemaVersion" : {
    "major" : 0,
    "minor" : 3,
    "patch" : 0
  },
  "sections" : [

  ],
  "variants" : [
    {
      "paths" : [
        "\/documentation\/polling\/polpolling\/logevent:value:"
      ],
      "traits" : [
        {
          "interfaceLanguage" : "occ"
        }
      ]
    }
  ]
, 
"references": {
"doc://com.polling.Polling/documentation/Polling": {
  "abstract" : [
    {
      "text" : "Internal developer documentation",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/com.polling.Polling\/documentation\/Polling",
  "kind" : "symbol",
  "role" : "collection",
  "title" : "Polling",
  "type" : "topic",
  "url" : "\/documentation\/polling"
},
"doc://com.polling.Polling/documentation/Polling/POLPolling": {
  "abstract" : [
    {
      "text" : "The primary SDK object",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "identifier",
      "text" : "POLPolling"
    }
  ],
  "identifier" : "doc:\/\/com.polling.Polling\/documentation\/Polling\/POLPolling",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "POLPolling",
  "type" : "topic",
  "url" : "\/documentation\/polling\/polpolling"
},
"doc://com.polling.Polling/documentation/Polling/POLPolling/logEvent:value:": {
  "abstract" : [
    {
      "text" : "Send and log events",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "text",
      "text" : "- "
    },
    {
      "kind" : "identifier",
      "text" : "logEvent:value:"
    }
  ],
  "identifier" : "doc:\/\/com.polling.Polling\/documentation\/Polling\/POLPolling\/logEvent:value:",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "logEvent:value:"
    }
  ],
  "role" : "symbol",
  "title" : "logEvent:value:",
  "type" : "topic",
  "url" : "\/documentation\/polling\/polpolling\/logevent:value:"
}
}
}