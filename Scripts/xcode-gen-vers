#!/usr/bin/ruby

require_relative 'version'

puts 'ARGS=' + ARGV.to_s

SCRIPT_INPUT_FILE = ARGV[0]
SCRIPT_OUTPUT_FILE_0 = ARGV[1]

puts 'SCRIPT_INPUT_FILE=' + SCRIPT_INPUT_FILE
puts 'SCRIPT_OUTPUT_FILE_0=' + SCRIPT_OUTPUT_FILE_0

if File.extname(SCRIPT_OUTPUT_FILE_0) == '.m' then
File.write(SCRIPT_OUTPUT_FILE_0,<<-EOF
/*
 *  POLVers.m
 *  Polling
 *
 *  Copyright Â© 2025 Polling.com. All rights reserved.
 *
 *  DO NOT EDIT THIS FILE
 *
 *  This file is generated automatically from the *.template_vers
 *  build rule.
 */

extern const short POLVersionMajorNumber;
extern const short POLVersionMinorNumber;
extern const short POLVersionPatchNumber;

extern const unsigned char POLVersionBranchString[];
extern const unsigned char POLVersionCommitString[];
extern const unsigned char POLVersionConfigString[];

extern const unsigned char POLVersionRepoStateString[];

extern const unsigned char POLVersionString[];
extern const unsigned char POLVersionLongString[];
extern const unsigned char POLVersionAllString[];

const short POLVersionMajorNumber __attribute__ ((used)) = #{MAJOR};
const short POLVersionMinorNumber __attribute__ ((used)) = #{MINOR};
const short POLVersionPatchNumber __attribute__ ((used)) = #{PATCH};

const unsigned char POLVersionBranchString[] __attribute__ ((used)) = "#{BRANCH}";
const unsigned char POLVersionCommitString[] __attribute__ ((used)) = "#{COMMIT}";
const unsigned char POLVersionConfigString[] __attribute__ ((used)) = "#{CONFIG}";
const unsigned char POLVersionRepoStateString[] __attribute__ ((used)) = "#{REPO_STATE}";

const unsigned char POLVersionString[] __attribute__ ((used)) = "#{VER}";
const unsigned char POLVersionLongString[] __attribute__ ((used)) = "#{VER_LONG}";
const unsigned char POLVersionAllString[] __attribute__ ((used)) = "#{VER_ALL}";

EOF
)
end
